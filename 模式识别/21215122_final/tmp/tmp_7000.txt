static 'static'	 [StartOfLine]	Loc=<./data/output/code_7000.c:1:1>
int 'int'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:1:8>
identifier 'tap_alloc'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:1:12>
l_paren '('		Loc=<./data/output/code_7000.c:1:21>
char 'char'		Loc=<./data/output/code_7000.c:1:22>
star '*'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:1:27>
identifier 'dev'		Loc=<./data/output/code_7000.c:1:28>
comma ','		Loc=<./data/output/code_7000.c:1:31>
identifier 'size_t'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:1:33>
identifier 'dev_size'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:1:40>
r_paren ')'		Loc=<./data/output/code_7000.c:1:48>
l_brace '{'	 [StartOfLine]	Loc=<./data/output/code_7000.c:3:1>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:5:5>
identifier 'tap_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:5:9>
comma ','		Loc=<./data/output/code_7000.c:5:15>
identifier 'if_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:5:17>
comma ','		Loc=<./data/output/code_7000.c:5:22>
identifier 'ppa'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:5:24>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:5:28>
minus '-'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:5:30>
numeric_constant '1'		Loc=<./data/output/code_7000.c:5:31>
semi ';'		Loc=<./data/output/code_7000.c:5:32>
static 'static'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:7:5>
int 'int'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:7:12>
identifier 'ip_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:7:16>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:7:22>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:7:24>
semi ';'		Loc=<./data/output/code_7000.c:7:25>
char 'char'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:9:5>
star '*'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:9:10>
identifier 'ptr'		Loc=<./data/output/code_7000.c:9:11>
semi ';'		Loc=<./data/output/code_7000.c:9:14>
static 'static'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:13:5>
int 'int'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:13:12>
identifier 'arp_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:13:16>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:13:23>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:13:25>
semi ';'		Loc=<./data/output/code_7000.c:13:26>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:15:5>
identifier 'ip_muxid'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:15:9>
comma ','		Loc=<./data/output/code_7000.c:15:17>
identifier 'arp_muxid'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:15:19>
semi ';'		Loc=<./data/output/code_7000.c:15:28>
struct 'struct'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:17:5>
identifier 'strioctl'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:17:12>
identifier 'strioc_if'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:17:22>
comma ','		Loc=<./data/output/code_7000.c:17:31>
identifier 'strioc_ppa'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:17:33>
semi ';'		Loc=<./data/output/code_7000.c:17:43>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:19:5>
identifier 'link_type'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:19:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:19:19>
identifier 'I_PLINK'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:19:21>
semi ';'		Loc=<./data/output/code_7000.c:19:28>
struct 'struct'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:21:5>
identifier 'lifreq'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:21:12>
identifier 'ifr'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:21:19>
semi ';'		Loc=<./data/output/code_7000.c:21:22>
char 'char'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:23:5>
identifier 'actual_name'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:23:10>
l_square '['		Loc=<./data/output/code_7000.c:23:21>
numeric_constant '32'		Loc=<./data/output/code_7000.c:23:22>
r_square ']'		Loc=<./data/output/code_7000.c:23:24>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:23:26>
string_literal '""'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:23:28>
semi ';'		Loc=<./data/output/code_7000.c:23:30>
identifier 'memset'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:27:5>
l_paren '('		Loc=<./data/output/code_7000.c:27:11>
amp '&'		Loc=<./data/output/code_7000.c:27:12>
identifier 'ifr'		Loc=<./data/output/code_7000.c:27:13>
comma ','		Loc=<./data/output/code_7000.c:27:16>
numeric_constant '0x0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:27:18>
comma ','		Loc=<./data/output/code_7000.c:27:21>
sizeof 'sizeof'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:27:23>
l_paren '('		Loc=<./data/output/code_7000.c:27:29>
identifier 'ifr'		Loc=<./data/output/code_7000.c:27:30>
r_paren ')'		Loc=<./data/output/code_7000.c:27:33>
r_paren ')'		Loc=<./data/output/code_7000.c:27:34>
semi ';'		Loc=<./data/output/code_7000.c:27:35>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:31:5>
l_paren '('		Loc=<./data/output/code_7000.c:31:7>
star '*'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:31:9>
identifier 'dev'		Loc=<./data/output/code_7000.c:31:10>
r_paren ')'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:31:14>
l_brace '{'		Loc=<./data/output/code_7000.c:31:15>
identifier 'ptr'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:33:8>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:33:12>
identifier 'dev'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:33:14>
semi ';'		Loc=<./data/output/code_7000.c:33:17>
while 'while'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:35:8>
l_paren '('		Loc=<./data/output/code_7000.c:35:13>
star '*'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:35:15>
identifier 'ptr'		Loc=<./data/output/code_7000.c:35:16>
ampamp '&&'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:35:20>
exclaim '!'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:35:23>
identifier 'qemu_isdigit'		Loc=<./data/output/code_7000.c:35:24>
l_paren '('		Loc=<./data/output/code_7000.c:35:36>
l_paren '('		Loc=<./data/output/code_7000.c:35:37>
int 'int'		Loc=<./data/output/code_7000.c:35:38>
r_paren ')'		Loc=<./data/output/code_7000.c:35:41>
star '*'		Loc=<./data/output/code_7000.c:35:42>
identifier 'ptr'		Loc=<./data/output/code_7000.c:35:43>
r_paren ')'		Loc=<./data/output/code_7000.c:35:46>
r_paren ')'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:35:48>
identifier 'ptr'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:35:50>
plusplus '++'		Loc=<./data/output/code_7000.c:35:53>
semi ';'		Loc=<./data/output/code_7000.c:35:55>
identifier 'ppa'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:37:8>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:37:12>
identifier 'atoi'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:37:14>
l_paren '('		Loc=<./data/output/code_7000.c:37:18>
identifier 'ptr'		Loc=<./data/output/code_7000.c:37:19>
r_paren ')'		Loc=<./data/output/code_7000.c:37:22>
semi ';'		Loc=<./data/output/code_7000.c:37:23>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:39:5>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:45:5>
l_paren '('		Loc=<./data/output/code_7000.c:45:7>
identifier 'ip_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:45:9>
r_paren ')'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:45:15>
identifier 'close'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:47:8>
l_paren '('		Loc=<./data/output/code_7000.c:47:13>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:47:14>
r_paren ')'		Loc=<./data/output/code_7000.c:47:19>
semi ';'		Loc=<./data/output/code_7000.c:47:20>
identifier 'TFR'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:51:5>
l_paren '('		Loc=<./data/output/code_7000.c:51:8>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:51:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:51:15>
identifier 'open'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:51:17>
l_paren '('		Loc=<./data/output/code_7000.c:51:21>
string_literal '"/dev/udp"'		Loc=<./data/output/code_7000.c:51:22>
comma ','		Loc=<./data/output/code_7000.c:51:32>
identifier 'O_RDWR'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:51:34>
comma ','		Loc=<./data/output/code_7000.c:51:40>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:51:42>
r_paren ')'		Loc=<./data/output/code_7000.c:51:43>
r_paren ')'		Loc=<./data/output/code_7000.c:51:44>
semi ';'		Loc=<./data/output/code_7000.c:51:45>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:53:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:53:8>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:53:9>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:53:15>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:53:17>
r_paren ')'		Loc=<./data/output/code_7000.c:53:18>
l_brace '{'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:53:20>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:55:8>
l_paren '('		Loc=<./data/output/code_7000.c:55:14>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:55:15>
comma ','		Loc=<./data/output/code_7000.c:55:22>
string_literal '"Can't open /dev/ip (actually /dev/udp)"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:55:24>
r_paren ')'		Loc=<./data/output/code_7000.c:55:64>
semi ';'		Loc=<./data/output/code_7000.c:55:65>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:57:8>
minus '-'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:57:15>
numeric_constant '1'		Loc=<./data/output/code_7000.c:57:16>
semi ';'		Loc=<./data/output/code_7000.c:57:17>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:59:5>
identifier 'TFR'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:63:5>
l_paren '('		Loc=<./data/output/code_7000.c:63:8>
identifier 'tap_fd'		Loc=<./data/output/code_7000.c:63:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:63:16>
identifier 'open'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:63:18>
l_paren '('		Loc=<./data/output/code_7000.c:63:22>
string_literal '"/dev/tap"'		Loc=<./data/output/code_7000.c:63:23>
comma ','		Loc=<./data/output/code_7000.c:63:33>
identifier 'O_RDWR'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:63:35>
comma ','		Loc=<./data/output/code_7000.c:63:41>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:63:43>
r_paren ')'		Loc=<./data/output/code_7000.c:63:44>
r_paren ')'		Loc=<./data/output/code_7000.c:63:45>
semi ';'		Loc=<./data/output/code_7000.c:63:46>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:65:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:65:8>
identifier 'tap_fd'		Loc=<./data/output/code_7000.c:65:9>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:65:16>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:65:18>
r_paren ')'		Loc=<./data/output/code_7000.c:65:19>
l_brace '{'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:65:21>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:67:8>
l_paren '('		Loc=<./data/output/code_7000.c:67:14>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:67:15>
comma ','		Loc=<./data/output/code_7000.c:67:22>
string_literal '"Can't open /dev/tap"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:67:24>
r_paren ')'		Loc=<./data/output/code_7000.c:67:45>
semi ';'		Loc=<./data/output/code_7000.c:67:46>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:69:8>
minus '-'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:69:15>
numeric_constant '1'		Loc=<./data/output/code_7000.c:69:16>
semi ';'		Loc=<./data/output/code_7000.c:69:17>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:71:5>
identifier 'strioc_ppa'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:77:5>
period '.'		Loc=<./data/output/code_7000.c:77:15>
identifier 'ic_cmd'		Loc=<./data/output/code_7000.c:77:16>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:77:23>
identifier 'TUNNEWPPA'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:77:25>
semi ';'		Loc=<./data/output/code_7000.c:77:34>
identifier 'strioc_ppa'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:79:5>
period '.'		Loc=<./data/output/code_7000.c:79:15>
identifier 'ic_timout'		Loc=<./data/output/code_7000.c:79:16>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:79:26>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:79:28>
semi ';'		Loc=<./data/output/code_7000.c:79:29>
identifier 'strioc_ppa'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:81:5>
period '.'		Loc=<./data/output/code_7000.c:81:15>
identifier 'ic_len'		Loc=<./data/output/code_7000.c:81:16>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:81:23>
sizeof 'sizeof'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:81:25>
l_paren '('		Loc=<./data/output/code_7000.c:81:31>
identifier 'ppa'		Loc=<./data/output/code_7000.c:81:32>
r_paren ')'		Loc=<./data/output/code_7000.c:81:35>
semi ';'		Loc=<./data/output/code_7000.c:81:36>
identifier 'strioc_ppa'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:83:5>
period '.'		Loc=<./data/output/code_7000.c:83:15>
identifier 'ic_dp'		Loc=<./data/output/code_7000.c:83:16>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:83:22>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:83:24>
char 'char'		Loc=<./data/output/code_7000.c:83:25>
star '*'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:83:30>
r_paren ')'		Loc=<./data/output/code_7000.c:83:31>
amp '&'		Loc=<./data/output/code_7000.c:83:32>
identifier 'ppa'		Loc=<./data/output/code_7000.c:83:33>
semi ';'		Loc=<./data/output/code_7000.c:83:36>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:85:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:8>
l_paren '('		Loc=<./data/output/code_7000.c:85:9>
identifier 'ppa'		Loc=<./data/output/code_7000.c:85:10>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:14>
identifier 'ioctl'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:16>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:22>
identifier 'tap_fd'		Loc=<./data/output/code_7000.c:85:23>
comma ','		Loc=<./data/output/code_7000.c:85:29>
identifier 'I_STR'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:31>
comma ','		Loc=<./data/output/code_7000.c:85:36>
amp '&'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:38>
identifier 'strioc_ppa'		Loc=<./data/output/code_7000.c:85:39>
r_paren ')'		Loc=<./data/output/code_7000.c:85:49>
r_paren ')'		Loc=<./data/output/code_7000.c:85:50>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:52>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:85:54>
r_paren ')'		Loc=<./data/output/code_7000.c:85:55>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:87:8>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:87:15>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:87:16>
comma ','		Loc=<./data/output/code_7000.c:87:23>
string_literal '"Can't assign new interface"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:87:25>
r_paren ')'		Loc=<./data/output/code_7000.c:87:53>
semi ';'		Loc=<./data/output/code_7000.c:87:54>
identifier 'TFR'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:91:5>
l_paren '('		Loc=<./data/output/code_7000.c:91:8>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:91:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:91:15>
identifier 'open'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:91:17>
l_paren '('		Loc=<./data/output/code_7000.c:91:21>
string_literal '"/dev/tap"'		Loc=<./data/output/code_7000.c:91:22>
comma ','		Loc=<./data/output/code_7000.c:91:32>
identifier 'O_RDWR'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:91:34>
comma ','		Loc=<./data/output/code_7000.c:91:40>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:91:42>
r_paren ')'		Loc=<./data/output/code_7000.c:91:43>
r_paren ')'		Loc=<./data/output/code_7000.c:91:44>
semi ';'		Loc=<./data/output/code_7000.c:91:45>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:93:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:93:8>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:93:9>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:93:15>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:93:17>
r_paren ')'		Loc=<./data/output/code_7000.c:93:18>
l_brace '{'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:93:20>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:95:8>
l_paren '('		Loc=<./data/output/code_7000.c:95:14>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:95:15>
comma ','		Loc=<./data/output/code_7000.c:95:22>
string_literal '"Can't open /dev/tap (2)"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:95:24>
r_paren ')'		Loc=<./data/output/code_7000.c:95:49>
semi ';'		Loc=<./data/output/code_7000.c:95:50>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:97:8>
minus '-'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:97:15>
numeric_constant '1'		Loc=<./data/output/code_7000.c:97:16>
semi ';'		Loc=<./data/output/code_7000.c:97:17>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:99:5>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:101:5>
l_paren '('		Loc=<./data/output/code_7000.c:101:7>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:101:8>
l_paren '('		Loc=<./data/output/code_7000.c:101:13>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:101:14>
comma ','		Loc=<./data/output/code_7000.c:101:19>
identifier 'I_PUSH'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:101:21>
comma ','		Loc=<./data/output/code_7000.c:101:27>
string_literal '"ip"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:101:29>
r_paren ')'		Loc=<./data/output/code_7000.c:101:33>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:101:35>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:101:37>
r_paren ')'		Loc=<./data/output/code_7000.c:101:38>
l_brace '{'		Loc=<./data/output/code_7000.c:101:39>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:103:8>
l_paren '('		Loc=<./data/output/code_7000.c:103:14>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:103:15>
comma ','		Loc=<./data/output/code_7000.c:103:22>
string_literal '"Can't push IP module"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:103:24>
r_paren ')'		Loc=<./data/output/code_7000.c:103:46>
semi ';'		Loc=<./data/output/code_7000.c:103:47>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:105:8>
minus '-'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:105:15>
numeric_constant '1'		Loc=<./data/output/code_7000.c:105:16>
semi ';'		Loc=<./data/output/code_7000.c:105:17>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:107:5>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:111:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:111:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:111:9>
l_paren '('		Loc=<./data/output/code_7000.c:111:14>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:111:15>
comma ','		Loc=<./data/output/code_7000.c:111:20>
identifier 'SIOCGLIFFLAGS'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:111:22>
comma ','		Loc=<./data/output/code_7000.c:111:35>
amp '&'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:111:37>
identifier 'ifr'		Loc=<./data/output/code_7000.c:111:38>
r_paren ')'		Loc=<./data/output/code_7000.c:111:41>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:111:43>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:111:45>
r_paren ')'		Loc=<./data/output/code_7000.c:111:46>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:113:2>
l_paren '('		Loc=<./data/output/code_7000.c:113:8>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:113:9>
comma ','		Loc=<./data/output/code_7000.c:113:16>
string_literal '"Can't get flags\n"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:113:18>
r_paren ')'		Loc=<./data/output/code_7000.c:113:37>
semi ';'		Loc=<./data/output/code_7000.c:113:38>
identifier 'snprintf'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:117:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:117:14>
identifier 'actual_name'		Loc=<./data/output/code_7000.c:117:15>
comma ','		Loc=<./data/output/code_7000.c:117:26>
numeric_constant '32'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:117:28>
comma ','		Loc=<./data/output/code_7000.c:117:30>
string_literal '"tap%d"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:117:32>
comma ','		Loc=<./data/output/code_7000.c:117:39>
identifier 'ppa'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:117:41>
r_paren ')'		Loc=<./data/output/code_7000.c:117:44>
semi ';'		Loc=<./data/output/code_7000.c:117:45>
identifier 'pstrcpy'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:119:5>
l_paren '('		Loc=<./data/output/code_7000.c:119:12>
identifier 'ifr'		Loc=<./data/output/code_7000.c:119:13>
period '.'		Loc=<./data/output/code_7000.c:119:16>
identifier 'lifr_name'		Loc=<./data/output/code_7000.c:119:17>
comma ','		Loc=<./data/output/code_7000.c:119:26>
sizeof 'sizeof'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:119:28>
l_paren '('		Loc=<./data/output/code_7000.c:119:34>
identifier 'ifr'		Loc=<./data/output/code_7000.c:119:35>
period '.'		Loc=<./data/output/code_7000.c:119:38>
identifier 'lifr_name'		Loc=<./data/output/code_7000.c:119:39>
r_paren ')'		Loc=<./data/output/code_7000.c:119:48>
comma ','		Loc=<./data/output/code_7000.c:119:49>
identifier 'actual_name'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:119:51>
r_paren ')'		Loc=<./data/output/code_7000.c:119:62>
semi ';'		Loc=<./data/output/code_7000.c:119:63>
identifier 'ifr'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:123:5>
period '.'		Loc=<./data/output/code_7000.c:123:8>
identifier 'lifr_ppa'		Loc=<./data/output/code_7000.c:123:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:123:18>
identifier 'ppa'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:123:20>
semi ';'		Loc=<./data/output/code_7000.c:123:23>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:129:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:129:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:129:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:129:15>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:129:16>
comma ','		Loc=<./data/output/code_7000.c:129:21>
identifier 'SIOCSLIFNAME'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:129:23>
comma ','		Loc=<./data/output/code_7000.c:129:35>
amp '&'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:129:37>
identifier 'ifr'		Loc=<./data/output/code_7000.c:129:38>
r_paren ')'		Loc=<./data/output/code_7000.c:129:41>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:129:43>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:129:45>
r_paren ')'		Loc=<./data/output/code_7000.c:129:46>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:131:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:131:16>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:131:17>
comma ','		Loc=<./data/output/code_7000.c:131:24>
string_literal '"Can't set PPA %d"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:131:26>
comma ','		Loc=<./data/output/code_7000.c:131:44>
identifier 'ppa'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:131:46>
r_paren ')'		Loc=<./data/output/code_7000.c:131:49>
semi ';'		Loc=<./data/output/code_7000.c:131:50>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:133:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:133:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:133:9>
l_paren '('		Loc=<./data/output/code_7000.c:133:14>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:133:15>
comma ','		Loc=<./data/output/code_7000.c:133:20>
identifier 'SIOCGLIFFLAGS'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:133:22>
comma ','		Loc=<./data/output/code_7000.c:133:35>
amp '&'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:133:37>
identifier 'ifr'		Loc=<./data/output/code_7000.c:133:38>
r_paren ')'		Loc=<./data/output/code_7000.c:133:41>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:133:43>
numeric_constant '0'		Loc=<./data/output/code_7000.c:133:44>
r_paren ')'		Loc=<./data/output/code_7000.c:133:45>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:135:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:135:16>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:135:17>
comma ','		Loc=<./data/output/code_7000.c:135:24>
string_literal '"Can't get flags\n"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:135:26>
r_paren ')'		Loc=<./data/output/code_7000.c:135:45>
semi ';'		Loc=<./data/output/code_7000.c:135:46>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:139:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:139:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:139:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:139:15>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:139:16>
comma ','		Loc=<./data/output/code_7000.c:139:21>
identifier 'I_PUSH'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:139:23>
comma ','		Loc=<./data/output/code_7000.c:139:29>
string_literal '"arp"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:139:31>
r_paren ')'		Loc=<./data/output/code_7000.c:139:36>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:139:38>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:139:40>
r_paren ')'		Loc=<./data/output/code_7000.c:139:41>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:141:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:141:16>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:141:17>
comma ','		Loc=<./data/output/code_7000.c:141:24>
string_literal '"Can't push ARP module (2)"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:141:26>
r_paren ')'		Loc=<./data/output/code_7000.c:141:53>
semi ';'		Loc=<./data/output/code_7000.c:141:54>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:147:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:147:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:147:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:147:15>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:147:16>
comma ','		Loc=<./data/output/code_7000.c:147:21>
identifier 'I_POP'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:147:23>
comma ','		Loc=<./data/output/code_7000.c:147:28>
identifier 'NULL'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:147:30>
r_paren ')'		Loc=<./data/output/code_7000.c:147:34>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:147:36>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:147:38>
r_paren ')'		Loc=<./data/output/code_7000.c:147:39>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:149:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:149:16>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:149:17>
comma ','		Loc=<./data/output/code_7000.c:149:24>
string_literal '"I_POP failed\n"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:149:26>
r_paren ')'		Loc=<./data/output/code_7000.c:149:42>
semi ';'		Loc=<./data/output/code_7000.c:149:43>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:151:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:151:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:151:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:151:15>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:151:16>
comma ','		Loc=<./data/output/code_7000.c:151:21>
identifier 'I_PUSH'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:151:23>
comma ','		Loc=<./data/output/code_7000.c:151:29>
string_literal '"arp"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:151:31>
r_paren ')'		Loc=<./data/output/code_7000.c:151:36>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:151:38>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:151:40>
r_paren ')'		Loc=<./data/output/code_7000.c:151:41>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:153:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:153:16>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:153:17>
comma ','		Loc=<./data/output/code_7000.c:153:24>
string_literal '"Can't push ARP module (3)\n"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:153:26>
r_paren ')'		Loc=<./data/output/code_7000.c:153:55>
semi ';'		Loc=<./data/output/code_7000.c:153:56>
identifier 'TFR'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:157:5>
l_paren '('		Loc=<./data/output/code_7000.c:157:8>
identifier 'arp_fd'		Loc=<./data/output/code_7000.c:157:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:157:16>
identifier 'open'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:157:18>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:157:23>
string_literal '"/dev/tap"'		Loc=<./data/output/code_7000.c:157:24>
comma ','		Loc=<./data/output/code_7000.c:157:34>
identifier 'O_RDWR'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:157:36>
comma ','		Loc=<./data/output/code_7000.c:157:42>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:157:44>
r_paren ')'		Loc=<./data/output/code_7000.c:157:45>
r_paren ')'		Loc=<./data/output/code_7000.c:157:46>
semi ';'		Loc=<./data/output/code_7000.c:157:47>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:159:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:159:8>
identifier 'arp_fd'		Loc=<./data/output/code_7000.c:159:9>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:159:16>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:159:18>
r_paren ')'		Loc=<./data/output/code_7000.c:159:19>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:161:8>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:161:15>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:161:16>
comma ','		Loc=<./data/output/code_7000.c:161:23>
string_literal '"Can't open %s\n"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:161:25>
comma ','		Loc=<./data/output/code_7000.c:161:42>
string_literal '"/dev/tap"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:161:44>
r_paren ')'		Loc=<./data/output/code_7000.c:161:54>
semi ';'		Loc=<./data/output/code_7000.c:161:55>
identifier 'strioc_if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:167:5>
period '.'		Loc=<./data/output/code_7000.c:167:14>
identifier 'ic_cmd'		Loc=<./data/output/code_7000.c:167:15>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:167:22>
identifier 'SIOCSLIFNAME'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:167:24>
semi ';'		Loc=<./data/output/code_7000.c:167:36>
identifier 'strioc_if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:169:5>
period '.'		Loc=<./data/output/code_7000.c:169:14>
identifier 'ic_timout'		Loc=<./data/output/code_7000.c:169:15>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:169:25>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:169:27>
semi ';'		Loc=<./data/output/code_7000.c:169:28>
identifier 'strioc_if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:171:5>
period '.'		Loc=<./data/output/code_7000.c:171:14>
identifier 'ic_len'		Loc=<./data/output/code_7000.c:171:15>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:171:22>
sizeof 'sizeof'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:171:24>
l_paren '('		Loc=<./data/output/code_7000.c:171:30>
identifier 'ifr'		Loc=<./data/output/code_7000.c:171:31>
r_paren ')'		Loc=<./data/output/code_7000.c:171:34>
semi ';'		Loc=<./data/output/code_7000.c:171:35>
identifier 'strioc_if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:173:5>
period '.'		Loc=<./data/output/code_7000.c:173:14>
identifier 'ic_dp'		Loc=<./data/output/code_7000.c:173:15>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:173:21>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:173:23>
char 'char'		Loc=<./data/output/code_7000.c:173:24>
star '*'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:173:29>
r_paren ')'		Loc=<./data/output/code_7000.c:173:30>
amp '&'		Loc=<./data/output/code_7000.c:173:31>
identifier 'ifr'		Loc=<./data/output/code_7000.c:173:32>
semi ';'		Loc=<./data/output/code_7000.c:173:35>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:175:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:175:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:175:9>
l_paren '('		Loc=<./data/output/code_7000.c:175:14>
identifier 'arp_fd'		Loc=<./data/output/code_7000.c:175:15>
comma ','		Loc=<./data/output/code_7000.c:175:21>
identifier 'I_STR'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:175:23>
comma ','		Loc=<./data/output/code_7000.c:175:28>
amp '&'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:175:30>
identifier 'strioc_if'		Loc=<./data/output/code_7000.c:175:31>
r_paren ')'		Loc=<./data/output/code_7000.c:175:40>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:175:42>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:175:44>
r_paren ')'		Loc=<./data/output/code_7000.c:175:45>
l_brace '{'		Loc=<./data/output/code_7000.c:175:46>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:177:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:177:16>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:177:17>
comma ','		Loc=<./data/output/code_7000.c:177:24>
string_literal '"Can't set ifname to arp\n"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:177:26>
r_paren ')'		Loc=<./data/output/code_7000.c:177:53>
semi ';'		Loc=<./data/output/code_7000.c:177:54>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:179:5>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:183:5>
l_paren '('		Loc=<./data/output/code_7000.c:183:7>
l_paren '('		Loc=<./data/output/code_7000.c:183:8>
identifier 'ip_muxid'		Loc=<./data/output/code_7000.c:183:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:183:18>
identifier 'ioctl'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:183:20>
l_paren '('		Loc=<./data/output/code_7000.c:183:25>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:183:26>
comma ','		Loc=<./data/output/code_7000.c:183:31>
identifier 'I_LINK'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:183:33>
comma ','		Loc=<./data/output/code_7000.c:183:39>
identifier 'if_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:183:41>
r_paren ')'		Loc=<./data/output/code_7000.c:183:46>
r_paren ')'		Loc=<./data/output/code_7000.c:183:47>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:183:49>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:183:51>
r_paren ')'		Loc=<./data/output/code_7000.c:183:52>
l_brace '{'		Loc=<./data/output/code_7000.c:183:53>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:185:8>
l_paren '('		Loc=<./data/output/code_7000.c:185:14>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:185:15>
comma ','		Loc=<./data/output/code_7000.c:185:22>
string_literal '"Can't link TAP device to IP"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:185:24>
r_paren ')'		Loc=<./data/output/code_7000.c:185:53>
semi ';'		Loc=<./data/output/code_7000.c:185:54>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:187:8>
minus '-'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:187:15>
numeric_constant '1'		Loc=<./data/output/code_7000.c:187:16>
semi ';'		Loc=<./data/output/code_7000.c:187:17>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:189:5>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:193:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:8>
l_paren '('		Loc=<./data/output/code_7000.c:193:9>
identifier 'arp_muxid'		Loc=<./data/output/code_7000.c:193:10>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:20>
identifier 'ioctl'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:22>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:28>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:193:29>
comma ','		Loc=<./data/output/code_7000.c:193:34>
identifier 'link_type'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:36>
comma ','		Loc=<./data/output/code_7000.c:193:45>
identifier 'arp_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:47>
r_paren ')'		Loc=<./data/output/code_7000.c:193:53>
r_paren ')'		Loc=<./data/output/code_7000.c:193:54>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:56>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:193:58>
r_paren ')'		Loc=<./data/output/code_7000.c:193:59>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:195:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:195:16>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:195:17>
comma ','		Loc=<./data/output/code_7000.c:195:24>
string_literal '"Can't link TAP device to ARP"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:195:26>
r_paren ')'		Loc=<./data/output/code_7000.c:195:56>
semi ';'		Loc=<./data/output/code_7000.c:195:57>
identifier 'close'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:199:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:199:11>
identifier 'if_fd'		Loc=<./data/output/code_7000.c:199:12>
r_paren ')'		Loc=<./data/output/code_7000.c:199:17>
semi ';'		Loc=<./data/output/code_7000.c:199:18>
identifier 'memset'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:203:5>
l_paren '('		Loc=<./data/output/code_7000.c:203:11>
amp '&'		Loc=<./data/output/code_7000.c:203:12>
identifier 'ifr'		Loc=<./data/output/code_7000.c:203:13>
comma ','		Loc=<./data/output/code_7000.c:203:16>
numeric_constant '0x0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:203:18>
comma ','		Loc=<./data/output/code_7000.c:203:21>
sizeof 'sizeof'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:203:23>
l_paren '('		Loc=<./data/output/code_7000.c:203:29>
identifier 'ifr'		Loc=<./data/output/code_7000.c:203:30>
r_paren ')'		Loc=<./data/output/code_7000.c:203:33>
r_paren ')'		Loc=<./data/output/code_7000.c:203:34>
semi ';'		Loc=<./data/output/code_7000.c:203:35>
identifier 'pstrcpy'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:205:5>
l_paren '('		Loc=<./data/output/code_7000.c:205:12>
identifier 'ifr'		Loc=<./data/output/code_7000.c:205:13>
period '.'		Loc=<./data/output/code_7000.c:205:16>
identifier 'lifr_name'		Loc=<./data/output/code_7000.c:205:17>
comma ','		Loc=<./data/output/code_7000.c:205:26>
sizeof 'sizeof'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:205:28>
l_paren '('		Loc=<./data/output/code_7000.c:205:34>
identifier 'ifr'		Loc=<./data/output/code_7000.c:205:35>
period '.'		Loc=<./data/output/code_7000.c:205:38>
identifier 'lifr_name'		Loc=<./data/output/code_7000.c:205:39>
r_paren ')'		Loc=<./data/output/code_7000.c:205:48>
comma ','		Loc=<./data/output/code_7000.c:205:49>
identifier 'actual_name'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:205:51>
r_paren ')'		Loc=<./data/output/code_7000.c:205:62>
semi ';'		Loc=<./data/output/code_7000.c:205:63>
identifier 'ifr'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:207:5>
period '.'		Loc=<./data/output/code_7000.c:207:8>
identifier 'lifr_ip_muxid'		Loc=<./data/output/code_7000.c:207:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:207:24>
identifier 'ip_muxid'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:207:26>
semi ';'		Loc=<./data/output/code_7000.c:207:34>
identifier 'ifr'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:209:5>
period '.'		Loc=<./data/output/code_7000.c:209:8>
identifier 'lifr_arp_muxid'		Loc=<./data/output/code_7000.c:209:9>
equal '='	 [LeadingSpace]	Loc=<./data/output/code_7000.c:209:24>
identifier 'arp_muxid'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:209:26>
semi ';'		Loc=<./data/output/code_7000.c:209:35>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:213:5>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:213:8>
identifier 'ioctl'		Loc=<./data/output/code_7000.c:213:9>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:213:15>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:213:16>
comma ','		Loc=<./data/output/code_7000.c:213:21>
identifier 'SIOCSLIFMUXID'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:213:23>
comma ','		Loc=<./data/output/code_7000.c:213:36>
amp '&'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:213:38>
identifier 'ifr'		Loc=<./data/output/code_7000.c:213:39>
r_paren ')'		Loc=<./data/output/code_7000.c:213:42>
less '<'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:213:44>
numeric_constant '0'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:213:46>
r_paren ')'		Loc=<./data/output/code_7000.c:213:47>
l_brace '{'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:215:5>
identifier 'ioctl'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:217:7>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:217:13>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:217:14>
comma ','		Loc=<./data/output/code_7000.c:217:19>
identifier 'I_PUNLINK'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:217:21>
comma ','	 [LeadingSpace]	Loc=<./data/output/code_7000.c:217:31>
identifier 'arp_muxid'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:217:33>
r_paren ')'		Loc=<./data/output/code_7000.c:217:42>
semi ';'		Loc=<./data/output/code_7000.c:217:43>
identifier 'ioctl'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:219:7>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:219:13>
identifier 'ip_fd'		Loc=<./data/output/code_7000.c:219:14>
comma ','		Loc=<./data/output/code_7000.c:219:19>
identifier 'I_PUNLINK'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:219:21>
comma ','		Loc=<./data/output/code_7000.c:219:30>
identifier 'ip_muxid'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:219:32>
r_paren ')'		Loc=<./data/output/code_7000.c:219:40>
semi ';'		Loc=<./data/output/code_7000.c:219:41>
identifier 'syslog'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:221:7>
l_paren '('	 [LeadingSpace]	Loc=<./data/output/code_7000.c:221:14>
identifier 'LOG_ERR'		Loc=<./data/output/code_7000.c:221:15>
comma ','		Loc=<./data/output/code_7000.c:221:22>
string_literal '"Can't set multiplexor id"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:221:24>
r_paren ')'		Loc=<./data/output/code_7000.c:221:50>
semi ';'		Loc=<./data/output/code_7000.c:221:51>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:223:5>
identifier 'snprintf'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:227:5>
l_paren '('		Loc=<./data/output/code_7000.c:227:13>
identifier 'dev'		Loc=<./data/output/code_7000.c:227:14>
comma ','		Loc=<./data/output/code_7000.c:227:17>
identifier 'dev_size'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:227:19>
comma ','		Loc=<./data/output/code_7000.c:227:27>
string_literal '"tap%d"'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:227:29>
comma ','		Loc=<./data/output/code_7000.c:227:36>
identifier 'ppa'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:227:38>
r_paren ')'		Loc=<./data/output/code_7000.c:227:41>
semi ';'		Loc=<./data/output/code_7000.c:227:42>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<./data/output/code_7000.c:229:5>
identifier 'tap_fd'	 [LeadingSpace]	Loc=<./data/output/code_7000.c:229:12>
semi ';'		Loc=<./data/output/code_7000.c:229:18>
r_brace '}'	 [StartOfLine]	Loc=<./data/output/code_7000.c:231:1>
eof ''		Loc=<./data/output/code_7000.c:231:2>
